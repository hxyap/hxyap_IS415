{
  "hash": "7bef29153239e2b92f48a53baafd4cff",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Takehome 2\"\ndate: \"September 11, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\nformat:\n  html:\n    toc: true\n---\n\n\n# Introduction : Drug Abuse in Thailand\n\nDrug abuse and trafficking in Thailand present a complex and evolving challenge that demands rigorous research and analysis. This study focuses on Thailand due to its unique position in the global drug trade and its recent policy shifts, offering valuable insights into the spatial and temporal dynamics of drug issues in Southeast Asia. Thailand's proximity to the Golden Triangle, the largest drug production site in Asia, coupled with its developing transportation infrastructure, has positioned the country as both a significant market and a crucial transit route for illicit substances. The COVID-19 pandemic and its aftermath have added new dimensions to this landscape, as drug syndicates rapidly adapted their operations to changing circumstances. Our research aims to examine whether key indicators of drug abuse in Thailand are independent of spatial factors, while also exploring the temporal aspects of drug trends. By analyzing data on drug prevalence, pricing, distribution methods, and law enforcement efforts over recent years, we seek to uncover patterns that may inform more effective policies and interventions. The study considers these two of critical factors:\n\n1.  The effects of major events, such as the COVID-19 pandemic, on drug trafficking and consumption\n\n2.  The consequences of recent legislative changes, including the 2021 Narcotics Code and the 2022 Kratom Plant Act\n\nBy examining these elements, we hope to contribute to a more nuanced understanding of drug issues in Thailand, potentially revealing insights that could be applicable to other regions facing similar challenges. This research is particularly timely as Thailand, like many countries, grapples with the post-pandemic resurgence of drug activities and seeks innovative approaches to address this persistent social and public health concern.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman:: p_load(sf, tmap, tidyverse, sfdep,spdep)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndrug_offenses <- read_csv(\"data/aspatial/thai_drug_offenses_2017_2022.csv\") %>%\n  filter(types_of_drug_offenses == \"drug_use_cases\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 7392 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): types_of_drug_offenses, province_th, province_en\ndbl (2): fiscal_year, no_cases\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndrug_offenses <- drug_offenses %>%\n  mutate(province_en = case_when(\n    province_en == \"buogkan\" ~ \"Bueng Kan\",\n    province_en == \"Loburi\" ~ \"Lop Buri\",\n    TRUE ~ province_en\n  ))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nadm1 <- st_read(\"data/geospatial/tha_adm_rtsd_itos_20210121_shp\", layer = \"tha_admbnda_adm1_rtsd_20220121\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `C:\\Users\\yapho\\Documents\\SMU\\smu y4\\is415\\hxyap_IS415\\takehome\\ex2\\data\\geospatial\\tha_adm_rtsd_itos_20210121_shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndrug_offenses_filtered <- drug_offenses %>% select(-province_th)\nadm1_filtered <- adm1 %>% select(-ADM1_TH, -ADM1ALT1TH, -ADM1ALT2TH, -ADM0_TH)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\njointable <- left_join(drug_offenses_filtered, adm1_filtered, by = c(\"province_en\" = \"ADM1_EN\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(jointable)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  fiscal_year   types_of_drug_offenses    no_cases       province_en       \n Min.   :2017   Length:462             Min.   :   32.0   Length:462        \n 1st Qu.:2018   Class :character       1st Qu.:  798.2   Class :character  \n Median :2020   Mode  :character       Median : 1403.5   Mode  :character  \n Mean   :2020                          Mean   : 1981.7                     \n 3rd Qu.:2021                          3rd Qu.: 2440.2                     \n Max.   :2022                          Max.   :16480.0                     \n   Shape_Leng       Shape_Area       ADM1_PCODE          ADM1_REF        \n Min.   : 1.024   Min.   :0.03458   Length:462         Length:462        \n 1st Qu.: 4.163   1st Qu.:0.29209   Class :character   Class :character  \n Median : 5.463   Median :0.47344   Mode  :character   Mode  :character  \n Mean   : 5.726   Mean   :0.56368                                        \n 3rd Qu.: 7.200   3rd Qu.:0.80197                                        \n Max.   :13.777   Max.   :1.90055                                        \n  ADM1ALT1EN         ADM1ALT2EN          ADM0_EN           ADM0_PCODE       \n Length:462         Length:462         Length:462         Length:462        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n      date               validOn              validTo          \n Min.   :2019-02-18   Min.   :2022-01-22   Min.   :-001-11-30  \n 1st Qu.:2019-02-18   1st Qu.:2022-01-22   1st Qu.:-001-11-30  \n Median :2019-02-18   Median :2022-01-22   Median :-001-11-30  \n Mean   :2019-02-18   Mean   :2022-01-22   Mean   :-001-11-30  \n 3rd Qu.:2019-02-18   3rd Qu.:2022-01-22   3rd Qu.:-001-11-30  \n Max.   :2019-02-18   Max.   :2022-01-22   Max.   :-001-11-30  \n          geometry  \n MULTIPOLYGON :462  \n epsg:4326    :  0  \n +proj=long...:  0  \n                    \n                    \n                    \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndrugoff_sf <- st_as_sf(jointable)\n\n# Set the CRS to match adm1\nst_crs(drugoff_sf) <- st_crs(adm1)\n\n# Verify the CRS\nprint(st_crs(drugoff_sf))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n```\n\n\n:::\n\n```{.r .cell-code}\n# Check the class of the geometry column\nprint(class(drugoff_sf$geometry))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"sfc_MULTIPOLYGON\" \"sfc\"             \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplots <- list()\n\nfor (i in 2017:2022){\n  p <- drugoff_sf %>%\n    filter(fiscal_year == i) %>%\n    tm_shape() +\n    tm_polygons(\"no_cases\")\n  \n  plots[[paste0(\"plot\", i)]] <- p\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndrugoff_list <- split(drugoff_sf, drugoff_sf$fiscal_year)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n tm_shape(drugoff_sf) +\n  tm_fill(\"no_cases\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSome legend labels were too wide. These labels have been resized to 0.61, 0.61, 0.56, 0.52. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](takehome2_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(drugoff_sf) +\n  tm_fill(\"no_cases\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSome legend labels were too wide. These labels have been resized to 0.61, 0.61, 0.56. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](takehome2_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nAs we can see from the equal intervals, our data is pretty skewed. Thus, we shall turn to equal quantiles to have a better visualization. With the right, we can see that actually it's only some regions that have a lot of cases, and those that do, have far more than regions than don't. revealing that our data is very skewed on a region by region basis. From this, we should look at southern and also northeast Thailand. A possible hypothesis is that the main distribution network for the Golden Triangle is located in Northeastern Thailand, with easy links to drug production and trafficking routes from Myanmar and Laos, with a secondary distribution network in Southern Thailand, allowing for potential distribution to more southerly regions, or suggesting maritime connections to the rest of Southeast Asia like Malaysia/ Indonesia.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\nplot_list <- list()\n\n# Loop through the drugoff_list and create each year's plot, storing them in plot_list\nfor (year in names(drugoff_list)) {\n  p <- tm_shape(drugoff_list[[year]]) +\n      tm_fill(\"no_cases\",\n              n = 5,\n              style = \"quantile\",\n              title = \"Number of Cases\") +  # Set legend title\n      tm_borders(alpha = 0.5) +\n      tm_layout(main.title = paste(\"Equal Quantile Classification\", year),\n                main.title.size = 0.8,         # Adjust the title size\n                main.title.position = c(\"center\", \"top\"),  # Center the title\n                frame = FALSE,                # Remove the frame around the plot\n                legend.outside = TRUE,        # Place the legend outside the plot\n                legend.outside.position = \"right\")\n  \n  # Store the plot in the list\n  plot_list[[year]] <- p\n}\n\n# Arrange the plots in a 2x3 layout\ntmap_arrange(plotlist = plot_list, ncol = 2, nrow = 3)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSome legend labels were too wide. These labels have been resized to 0.59, 0.54. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSome legend labels were too wide. These labels have been resized to 0.59, 0.59, 0.54. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\nSome legend labels were too wide. These labels have been resized to 0.59, 0.59, 0.54. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSome legend labels were too wide. These labels have been resized to 0.59, 0.59, 0.59. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSome legend labels were too wide. These labels have been resized to 0.59, 0.59, 0.59, 0.54. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSome legend labels were too wide. These labels have been resized to 0.59, 0.59, 0.59. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](takehome2_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#tm_shape(adm1_filtered) + tm_polygons() + tm_shape(ports) + tm_dots(size = 0.1)\n```\n:::\n\n\n# 1.0 Analyzing the impact of the Drug Offenses Act\n\nWe will be looking into 2022 as it is the year after the 2021 drug offenses act was passed.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrugoff_list[[6]]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 77 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n# A tibble: 77 × 16\n   fiscal_year types_of_drug_offenses no_cases province_en Shape_Leng Shape_Area\n         <dbl> <chr>                     <dbl> <chr>            <dbl>      <dbl>\n 1        2022 drug_use_cases              168 Krabi             8.21      0.409\n 2        2022 drug_use_cases             2755 Bangkok           2.42      0.131\n 3        2022 drug_use_cases             1476 Kanchanabu…       8.23      1.63 \n 4        2022 drug_use_cases             3753 Kalasin           6.05      0.583\n 5        2022 drug_use_cases              623 Kamphaeng …       5.19      0.724\n 6        2022 drug_use_cases             3968 Khon Kaen         8.99      0.898\n 7        2022 drug_use_cases             1207 Chanthaburi       5.13      0.533\n 8        2022 drug_use_cases             1502 Chachoengs…       4.94      0.431\n 9        2022 drug_use_cases             2930 Chon Buri         6.09      0.376\n10        2022 drug_use_cases              617 Chai Nat          2.90      0.209\n# ℹ 67 more rows\n# ℹ 10 more variables: ADM1_PCODE <chr>, ADM1_REF <chr>, ADM1ALT1EN <chr>,\n#   ADM1ALT2EN <chr>, ADM0_EN <chr>, ADM0_PCODE <chr>, date <date>,\n#   validOn <date>, validTo <date>, geometry <MULTIPOLYGON [°]>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Generate neighbors list\nwm_q_druguse22 <- drugoff_list[[6]] %>%\n  mutate(nb = st_contiguity(geometry))\n\n# Manually modify the empty neighbor set\n# Suppose the empty neighbor set is at index 'empty_index' and its nearest neighbor is at index 'nearest_index'\n\nempty_index <- 42   # Index of the geometry with the empty neighbor set\nnearest_index <- 35  # Index of the nearest neighbor\n\n# Manually add the nearest neighbor to the empty set\nwm_q_druguse22$nb[[empty_index]] <- as.integer(nearest_index)\n\n# Now, calculate the weights after modifying the neighbor list\nwm_q_DUC22 <- wm_q_druguse22 %>%\n  mutate(wt = st_weights(nb, style = \"W\"),\n         .before = 1)\n```\n:::\n\n\n## **1.1.1 Global Measures of Spatial Autocorrelation: Moran’s I**\n\nMoran's I is a global measure of spatial autocorrelation that helps determine whether similar values cluster together in space (positive spatial autocorrelation), disperse (negative spatial autocorrelation), or are randomly distributed. The statistic ranges from -1 to +1:\n\n-   Values close to +1 indicate strong positive spatial autocorrelation (clustering)\n\n-   Values close to -1 indicate strong negative spatial autocorrelation (dispersion)\n\n-   Values near 0 suggest random spatial distribution\n\nBy using Moran's I, we can determine if the number of drug cases across Thailand's regions are spatially correlated. This will reveal if high (or low) case numbers tend to cluster together geographically. Let's perform a simple Moran's and then a monte-carlo sim to check our claim stands:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoranI_DUC22 <- global_moran(wm_q_DUC22$no_cases, wm_q_DUC22$nb, wm_q_DUC22$wt)\n\nglimpse(moranI_DUC22)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ I: num 0.213\n $ K: num 3.88\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_test(wm_q_DUC22$no_cases, wm_q_DUC22$nb, wm_q_DUC22$wt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 2.9643, p-value = 0.001517\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.213305190      -0.013157895       0.005836395 \n```\n\n\n:::\n:::\n\n\nset seed\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42069)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran <- global_moran_perm(wm_q_DUC22$no_cases, wm_q_DUC22$nb, wm_q_DUC22$wt, nsim = 99)\n\nglobal_moran\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.21331, observed rank = 100, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\nBased off our Moran's test as well as our simulations, we can deduce that:\n\n-   Since our Moran's value is positive (\\>0 ) but only moderately, there is evidence for a moderate positive spatial autocorrelation, meaning that similar values tend to cluster together in space more than would be expected by chance.\n\n    -   These results are both statistically significant with both having very small p-values that are definitely \\<0.05.\n\n    -   This is further supported by the simulation, as the observed rank of 100 out of 100 simulations means that the observed Moran's I value was higher than all simulated values under the null hypothesis of no spatial autocorrelation.\n\n# 2.0 Local Measures\n\nWe will now confirm this with local measures.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_DUC22 <- wm_q_DUC22 %>% \n  mutate(local_moran = local_moran(no_cases, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmap1 <- tm_shape(lisa_DUC22) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of no_cases\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa_DUC22) +\n  tm_fill(\"p_ii\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](takehome2_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_sig_DUC22 <- lisa_DUC22 %>%\n  filter(p_ii < 0.05)\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(lisa_DUC22) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig_DUC22) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](takehome2_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_idw_DUC22 <- wm_q_druguse22 %>%\n  mutate(wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n! Polygon provided. Using point on surface.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `stopifnot()`.\nℹ In argument: `wts = st_inverse_distance(nb, geometry, scale = 1, alpha = 1)`.\nCaused by warning in `st_point_on_surface.sfc()`:\n! st_point_on_surface may not give correct results for longitude/latitude data\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nHotColdSpotAnalysis_DUC22 <- wm_idw_DUC22 %>% \n  mutate(local_Gi = local_gstar_perm(\n    no_cases, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_Gi)\nHotColdSpotAnalysis_DUC22\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 77 features and 27 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n# A tibble: 77 × 28\n   gi_star cluster   e_gi     var_gi std_dev p_value p_sim p_folded_sim skewness\n     <dbl> <fct>    <dbl>      <dbl>   <dbl>   <dbl> <dbl>        <dbl>    <dbl>\n 1  0.0920 Low     0.0101 0.00000896  1.08   0.279    0.36         0.18   0.207 \n 2 -0.308  High    0.0143 0.0000108  -0.692  0.489    0.58         0.29   0.0198\n 3 -0.758  Low     0.0130 0.0000110  -0.797  0.425    0.46         0.23   0.448 \n 4  3.42   High    0.0153 0.0000113   2.60   0.00941  0.04         0.02   0.528 \n 5 -2.38   Low     0.0119 0.00000968 -2.35   0.0187   0.04         0.02   0.0345\n 6  2.80   High    0.0146 0.00000735  2.13   0.0331   0.04         0.02   0.271 \n 7 -0.113  Low     0.0128 0.0000118  -0.0585 0.953    0.98         0.49   0.823 \n 8  0.0844 Low     0.0133 0.00000990 -0.0120 0.990    1            0.5    0.533 \n 9  0.679  High    0.0154 0.0000144   0.155  0.877    0.84         0.42   0.464 \n10 -1.77   Low     0.0120 0.0000132  -1.62   0.105    0.08         0.04   0.449 \n# ℹ 67 more rows\n# ℹ 19 more variables: kurtosis <dbl>, wts <list>, fiscal_year <dbl>,\n#   types_of_drug_offenses <chr>, no_cases <dbl>, province_en <chr>,\n#   Shape_Leng <dbl>, Shape_Area <dbl>, ADM1_PCODE <chr>, ADM1_REF <chr>,\n#   ADM1ALT1EN <chr>, ADM1ALT2EN <chr>, ADM0_EN <chr>, ADM0_PCODE <chr>,\n#   date <date>, validOn <date>, validTo <date>, geometry <MULTIPOLYGON [°]>,\n#   nb <nb>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(HotColdSpotAnalysis_DUC22) +\n  tm_fill(\"gi_star\", palette = \"-RdBu\", style = \"cont\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](takehome2_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(HotColdSpotAnalysis_DUC22) + tm_fill(\"p_sim\") + tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](takehome2_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmap1 <- tm_shape(HotColdSpotAnalysis_DUC22) +\n  tm_fill(\"gi_star\", palette = \"-RdBu\", style = \"cont\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of GDPPC\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(HotColdSpotAnalysis_DUC22) +\n  tm_fill(\"p_value\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](takehome2_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSA_sig_DUC22 <- HotColdSpotAnalysis_DUC22  %>%\n  filter(p_sim < 0.05)\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(HotColdSpotAnalysis_DUC22) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig_DUC22) +\n  tm_fill(\"gi_star\", palette = \"-RdBu\", style = \"cont\") + \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](takehome2_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n\n\nInteresting. So there is a cold spot here? let's find their name:\\\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncold_spot <- HotColdSpotAnalysis_DUC22 %>%\n  filter(p_sim < 0.05) %>%\n  arrange(gi_star) %>%\n  slice(1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(cold_spot$province_en)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Nakhon Sawan\"\n```\n\n\n:::\n:::\n\n\nAnd there we have it! A cursory google search finds us that Nakhon Sawan is home the the central point of where Thailand's waterways meet to form the Chao Phraya River. It has an army unit stationed there as well as well a large wetland. A possible explanation is that the combination of few people, hard to cross wetlands, as well as not much to be done or lack of foreign activity there means there is little incentive for drug dealers to use that location for much else but drug transit. As drugs are only there in a transitory matter, all the drug cases happen elsewhere in Thailand instead.\n\nWe know from previous current knowledge that the northern hotspot can be attributed to the well known Golden Triangle. But then why is there a random hot spot at the south of Thailand?\n\nLet's find that southern spot:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspots_1_to_2 <- HotColdSpotAnalysis_DUC22 %>%\n  filter(gi_star >= 1 & gi_star < 2) %>%\n  filter(p_sim < 0.05)  # This ensures the results are statistically significant\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nspots_1_to_2$province_en\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Phatthalung\"\n```\n\n\n:::\n:::\n\n\nInteresting. A cursory news search (<https://www.bernama.com/en/news.php?id=2304082>) suggests that this could be due to drug lords making Phattalung, a relatively landlocked state, a possible escapade location due to it's lack of accessibility (only accessible by rail and land, no airports).\n\n## 3.0 Bonus\n\nFor our bonus, we are going to do some EDA for fun since I ran out of time due to getting hit with food poisoning :)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrug_unf <- read_csv(\"data/aspatial/thai_drug_offenses_2017_2022.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 7392 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): types_of_drug_offenses, province_th, province_en\ndbl (2): fiscal_year, no_cases\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nunique_types <- unique(drug_unf$types_of_drug_offenses)\nprint(unique_types)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"drug_use_cases\"                                        \n [2] \"suspects_in_drug_use_cases\"                            \n [3] \"possession_cases\"                                      \n [4] \"suspects_in_possession_cases\"                          \n [5] \"possession_with_intent_to_distribute_cases\"            \n [6] \"suspects_in_possession_with_intent_to_distribute_cases\"\n [7] \"trafficking_cases\"                                     \n [8] \"suspects_in_trafficking_cases\"                         \n [9] \"production_cases\"                                      \n[10] \"suspects_in_production_cases\"                          \n[11] \"import_cases\"                                          \n[12] \"suspects_in_import_cases\"                              \n[13] \"export_cases\"                                          \n[14] \"suspects_in_export_cases\"                              \n[15] \"conspiracy_cases\"                                      \n[16] \"suspects_in_conspiracy_cases\"                          \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(drug_unf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n  fiscal_year types_of_drug_offenses no_cases province_th   province_en         \n        <dbl> <chr>                     <dbl> <chr>         <chr>               \n1        2017 drug_use_cases            11871 กรุงเทพมหานคร  Bangkok             \n2        2017 drug_use_cases              200 ชัยนาท         Chai Nat            \n3        2017 drug_use_cases              553 นนทบุรี         Nonthaburi          \n4        2017 drug_use_cases              450 ปทุมธานี        Pathum Thani        \n5        2017 drug_use_cases              378 พระนครศรีอยุธยา Phra Nakhon Si Ayut…\n6        2017 drug_use_cases              727 ลพบุรี          Loburi              \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 1: Filter data for 2022, remove specified case types, and reshape\nwide_data <- drug_unf %>%\n  filter(fiscal_year == 2022) %>%\n  filter(!types_of_drug_offenses %in% c(\n    \"suspects_in_export_cases\",\n    \"export_cases\",\n    \"suspects_in_import_cases\",\n    \"import_cases\"\n  )) %>%\n  select(province_th, types_of_drug_offenses, no_cases) %>%\n  pivot_wider(names_from = types_of_drug_offenses, values_from = no_cases, values_fill = 0)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(corrplot)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ncorrplot 0.94 loaded\n```\n\n\n:::\n\n```{.r .cell-code}\n# Step 2: Create co-occurrence matrix\noffense_matrix <- as.matrix(wide_data[,-1])  # Exclude the province column\n# Step 2.5: Remove \"_cases\" from column names\ncolnames(offense_matrix) <- gsub(\"_cases$\", \"\", colnames(offense_matrix))\n# Step 3: Check for columns with zero variance\nzero_var_cols <- apply(offense_matrix, 2, var) == 0\nif(any(zero_var_cols)) {\n  print(\"The following offense types have zero variance and will be removed:\")\n  print(names(zero_var_cols)[zero_var_cols])\n  offense_matrix <- offense_matrix[, !zero_var_cols]\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"The following offense types have zero variance and will be removed:\"\n[1] \"conspiracy\"             \"suspects_in_conspiracy\"\n```\n\n\n:::\n\n```{.r .cell-code}\nco_occurrence <- t(offense_matrix) %*% offense_matrix\n\n# Step 5: Handle NA and Inf values in normalization\ndiag_values <- diag(co_occurrence)\nnormalization_factor <- sqrt(diag_values %*% t(diag_values))\n\n# Replace 0 with a small number to avoid division by zero\nnormalization_factor[normalization_factor == 0] <- 1e-10\n\nco_occurrence_norm <- co_occurrence / normalization_factor\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 6: Visualize the matrix using base R\nheatmap(co_occurrence_norm, \n        Rowv = NA, Colv = NA, \n        scale = \"none\",\n        main = \"Normalized Co-occurrence of Drug Offense Types\",\n        xlab = \"Drug Offense Types\", \n        ylab = \"Drug Offense Types\")\n\n# Add text labels to the heatmap\ntext(expand.grid(1:ncol(co_occurrence_norm), 1:nrow(co_occurrence_norm)),\n     labels = round(c(co_occurrence_norm), 2),\n     cex = 0.7)\n```\n\n::: {.cell-output-display}\n![](takehome2_files/figure-html/unnamed-chunk-46-1.png){width=672}\n:::\n:::\n\n\nAlternatively,\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 6: Prepare data for ggplot\nmelted_corr <- as.data.frame(co_occurrence_norm) %>%\n  rownames_to_column(var = \"Var1\") %>%\n  pivot_longer(cols = -Var1, names_to = \"Var2\", values_to = \"value\")\n\n# Step 7: Create heatmap using ggplot2 with adjusted width and smaller text\nggplot(melted_corr, aes(x = Var1, y = Var2, fill = value)) +\n  geom_tile() +\n  geom_text(aes(label = round(value, 2)), color = \"black\", size = 2.5) + # Smaller cell text\n  scale_fill_gradient2(low = \"blue\", high = \"red\", mid = \"white\", midpoint = 0.5) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 8), # Smaller x-axis text\n    axis.text.y = element_text(size = 8), # Smaller y-axis text\n    axis.title = element_blank(),\n    plot.title = element_text(size = 12), # Smaller title\n    legend.title = element_text(size = 10), # Smaller legend title\n    legend.text = element_text(size = 8), # Smaller legend text\n    aspect.ratio = 0.7  # This makes the plot wider\n  ) +\n  labs(title = \"Normalized Co-occurrence of Drug Offense Types\",\n       fill = \"Co-occurrence\") +\n  scale_x_discrete(expand = c(0, 0)) +\n  scale_y_discrete(expand = c(0, 0))\n```\n\n::: {.cell-output-display}\n![](takehome2_files/figure-html/unnamed-chunk-47-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Save the plot with a specific width and height\nggsave(\"wide_heatmap_small_text.png\", width = 12, height = 8, units = \"in\", dpi = 300)\n```\n:::\n\n\nSo essentially we can probably just combine/ rename the suspects_in columns with their respective \"suspect\" less column it seems :/ Cool to know.\\\n\\\nWe also now know that possession in general has high correlation with drug use cases, but trafficking/production has lower correlation. I think this opens some further questions like:\\\n1) Where are the distribution cases located? Are they peak in the previously seen HCSA/ highlighted Moran's spots? Is the reason for our weird spots due to distributions?\n\n2\\) Where is our trafficking cases highlighted? Previously, we can recall a lull in use cases in our favourite spot Nakhon Sawan. Due to its favourable location, is it possible there is a normal amount of trafficking cases there due to it being the centre of the country of sorts?\n\n3\\) How are the cases connected? Can we map out the drug distribution networks through the general provincial data? We recall network based analysis...\n\n4\\) Hey, we did the hard work, maybe we can do Hierachial clustering or GWR (Geographically Weighted Regression?\n\nUnfortunately it is 9pm as I write this with an upcoming group meeting, so that will be resolved next time by viewers' request\\~\n\nThanks for reading!\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}