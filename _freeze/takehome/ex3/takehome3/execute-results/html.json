{
  "hash": "5100e12b4970846db3420115045bf468",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Takehome 3\"\ndate: \"November 2, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\nformat:\n  html:\n    toc: true\n---\n\n\n## Project Methodology\n\n**Data Collection**:\n\nWe gathered data on schools in Jakarta, including their location, type, and status. We also collected information on property prices and boundaries for administrative regions in Jakarta.\n\n**Geospatial Analysis**:\n\n1.  Spatial Point Patterns Analysis for School Locations (Provincial and City level)\n2.  LISA and HCSA Analysis of Schools (District level)\n3.  Geographically weighted regression for education levels versus availability and accessibility of schools (Sub-district level)\n\nFor my team, I'll be covering a deeper dive into (3), which is GWR regression.\n\n## Loading Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, tidyverse, knitr, viridis, patchwork, gridExtra, kableExtra, sfdep, tmap, tmaptools, patchwork, scales, spdep, ggrepel, spatstat, GWmodel, gtsummary, olsrr, ClustGeo, corrplot, ggpubr)\n```\n:::\n\n\n## Dataset Preparation\n\nThere are 3 datasets we will be using:\n\n-   `complete_data.csv`: Contains information about schools in Indonesia, including their location, type, and status.\n-   `geoBoundaries-IDN-ADM2_simplified`: Contains simplified boundaries for administrative level 2 (ADM2) in Indonesia.\n-   `BATAS_DESA_DESEMBER_2019_DUKCAPIL_DKI_JAKARTA`: Contains detailed boundaries for villages (desa) in Jakarta.\n\n## 1.0 Spatial Points Pattern Analysis of School Distribution at the Provincial and City Level\n\n### 1.1 Data Preprocessing\n\n\n::: {.cell}\n\n```{.r .cell-code}\nindo_schools_kaggle <- read_csv(\"data/aspatial/complete_data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 215371 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (6): province_name, city_name, district_name, school_name, stage, status\ndbl (5): lat, long, province_area, total_population, total_education_age_pop...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(indo_schools_kaggle, n=20)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 20 × 11\n   province_name city_name    district_name school_name stage status   lat  long\n   <chr>         <chr>        <chr>         <chr>       <chr> <chr>  <dbl> <dbl>\n 1 PAPUA         Kab. Tolika… Kec. Gilungb… SMP SATAP … SMP   N      -3.42  138.\n 2 PAPUA         Kab. Tolika… Kec. Wunin    SD YPPGI W… SD    S      -3.48  139.\n 3 PAPUA         Kab. Tolika… Kec. Bokondi… SMAN BOKON… SMA   N      -3.53  139.\n 4 PAPUA         Kab. Tolika… Kec. Kuari    SD INPRES … SD    N      -3.52  139.\n 5 PAPUA         Kab. Tolika… Kec. Karubaga SMAS YPPGI… SMA   S      -3.45  139.\n 6 PAPUA         Kab. Tolika… Kec. Wunin    SD NEGERI … SD    N      -3.49  139.\n 7 PAPUA         Kab. Tolika… Kec. Wina     SD INPRES … SD    N      -3.42  138.\n 8 PAPUA         Kab. Lanny … Kec. Tiomneri SD Negeri … SD    N      -3.86  138.\n 9 PAPUA         Kab. Lanny … Kec. Pirime   SMP YPPGI … SMP   S      -3.93  138.\n10 PAPUA         Kab. Lanny … Kec. Tiomneri SD INPRES … SD    N      -3.89  138.\n11 PAPUA         Kab. Lanny … Kec. Tiom     SD NEGERI … SD    N      -3.92  138.\n12 PAPUA         Kab. Lanny … Kec. Dimba    SMP NEGERI… SMP   N      -3.86  139.\n13 PAPUA         Kab. Lanny … Kec. Balingga SD Negeri … SD    N      -4.08  138.\n14 PAPUA         Kab. Lanny … Kec. Gamelia  SD YPPGI Y… SD    S      -3.94  139.\n15 PAPUA         Kab. Lanny … Kec. Gamelia  SD INPRES … SD    N      -3.87  139.\n16 PAPUA         Kab. Lanny … Kec. Tiom     SMP NEGERI… SMP   N      -3.92  138.\n17 PAPUA         Kab. Lanny … Kec. Makki    SMAN 1 MAK… SMA   N      -3.94  139.\n18 PAPUA         Kab. Lanny … Kec. Pirime   SMP NEGERI… SMP   N      -3.86  138.\n19 PAPUA         Kab. Lanny … Kec. Pirime   SMP NEGERI… SMP   N      -3.88  138.\n20 PAPUA         Kab. Lanny … Kec. Pirime   SD INPRES … SD    N      -3.89  139.\n# ℹ 3 more variables: province_area <dbl>, total_population <dbl>,\n#   total_education_age_population <dbl>\n```\n\n\n:::\n:::\n\n\nWe do some filtering and data manipulation here to restrict our data to jakarta only.\n\n\n::: {.cell}\n\n```{.r .cell-code}\njakarta_schools <- indo_schools_kaggle %>% \n  filter(province_name == \"DKI JAKARTA\",\n         city_name != \"Kab. Kepulauan Seribu\") %>%\n  filter(!is.na(long) & !is.na(lat)) %>%\n  st_as_sf(coords = c(\"long\", \"lat\"), crs = 4326) %>%\n  mutate(\n      school_level = case_when(\n        stage %in% c(\"SD\", \"SDLB\") ~ \"Elementary\",\n        stage %in% c(\"SMP\", \"SMPLB\") ~ \"Junior High\",\n        stage %in% c(\"SMA\", \"SMK\", \"SMLB\") ~ \"Senior High\",\n        TRUE ~ \"Special Education\"\n      ),\n      school_type = if_else(status == \"N\", \"Public\", \"Private\")\n    )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(jakarta_schools)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 11 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 106.8139 ymin: -6.1992 xmax: 106.8642 ymax: -6.1462\nGeodetic CRS:  WGS 84\n# A tibble: 6 × 12\n  province_name city_name   district_name school_name stage status province_area\n  <chr>         <chr>       <chr>         <chr>       <chr> <chr>          <dbl>\n1 DKI JAKARTA   Kota Jakar… Kec. Tanah A… SD NEGERI … SD    N                664\n2 DKI JAKARTA   Kota Jakar… Kec. Senen    SDN Kenari… SD    N                664\n3 DKI JAKARTA   Kota Jakar… Kec. Johar B… SD NEGERI … SD    N                664\n4 DKI JAKARTA   Kota Jakar… Kec. Menteng  SMAS PSKD … SMA   S                664\n5 DKI JAKARTA   Kota Jakar… Kec. Sawah B… SMKS STRAD… SMK   S                664\n6 DKI JAKARTA   Kota Jakar… Kec. Cempaka… SDN Cempak… SD    N                664\n# ℹ 5 more variables: total_population <dbl>,\n#   total_education_age_population <dbl>, geometry <POINT [°]>,\n#   school_level <chr>, school_type <chr>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nadm2 <- st_read(\"data/geospatial\", layer = \"geoBoundaries-IDN-ADM2_simplified\") %>%\n  filter(shapeName %in% c(\n      \"Kota Jakarta Barat\", \"Kota Jakarta Pusat\",\n      \"Kota Jakarta Selatan\", \"Kota Jakarta Timur\",\n      \"Kota Jakarta Utara\"\n    ))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `geoBoundaries-IDN-ADM2_simplified' from data source \n  `C:\\Users\\yapho\\Documents\\SMU\\smu y4\\is415\\hxyap_IS415\\takehome\\ex3\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 519 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 95.01115 ymin: -11.00762 xmax: 141.0194 ymax: 6.07693\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbatas <- st_read(\"data/geospatial\", layer = \"BATAS_DESA_DESEMBER_2019_DUKCAPIL_DKI_JAKARTA\")  %>%\n    select(OBJECT_ID, PROVINSI, KAB_KOTA, KECAMATAN, DESA_KELUR, \n         JUMLAH_PEN, JUMLAH_KK, LUAS_WILAY, KEPADATAN, geometry) %>%\n    rename(\n    province = PROVINSI,\n    city = KAB_KOTA,\n    district = KECAMATAN,\n    subdistrict = DESA_KELUR,\n    population = JUMLAH_PEN,\n    total_families = JUMLAH_KK,\n    area_size = LUAS_WILAY,\n    popn_density = KEPADATAN\n    ) %>%\n    filter(!is.na(city) & city != \"KEPULAUAN SERIBU\") %>%\n    mutate(city = case_when(\n      city == \"JAKARTA BARAT\" ~ \"Kota Jakarta Barat\",\n      city == \"JAKARTA PUSAT\" ~ \"Kota Jakarta Pusat\",\n      city == \"JAKARTA SELATAN\" ~ \"Kota Jakarta Selatan\",\n      city == \"JAKARTA TIMUR\" ~ \"Kota Jakarta Timur\",\n      city == \"JAKARTA UTARA\" ~ \"Kota Jakarta Utara\",\n      TRUE ~ city\n    ))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `BATAS_DESA_DESEMBER_2019_DUKCAPIL_DKI_JAKARTA' from data source \n  `C:\\Users\\yapho\\Documents\\SMU\\smu y4\\is415\\hxyap_IS415\\takehome\\ex3\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 269 features and 161 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 106.3831 ymin: -6.370815 xmax: 106.9728 ymax: -5.184322\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(batas)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 9 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 106.8105 ymin: -6.17575 xmax: 106.8711 ymax: -6.141043\nGeodetic CRS:  WGS 84\n  OBJECT_ID    province               city    district   subdistrict population\n1     25477 DKI JAKARTA Kota Jakarta Barat  TAMAN SARI     KEAGUNGAN      21609\n2     25478 DKI JAKARTA Kota Jakarta Barat  TAMAN SARI        GLODOK       9069\n3     25397 DKI JAKARTA Kota Jakarta Pusat   KEMAYORAN HARAPAN MULIA      29085\n4     25400 DKI JAKARTA Kota Jakarta Pusat   KEMAYORAN  CEMPAKA BARU      41913\n5     25390 DKI JAKARTA Kota Jakarta Pusat SAWAH BESAR    PASAR BARU      15793\n6     25391 DKI JAKARTA Kota Jakarta Pusat SAWAH BESAR  KARANG ANYAR      33383\n  total_families area_size popn_density                       geometry\n1           7255      0.36        60504 MULTIPOLYGON (((106.8164 -6...\n2           3273      0.37        24527 MULTIPOLYGON (((106.8148 -6...\n3           9217      0.53        54465 MULTIPOLYGON (((106.8576 -6...\n4          13766      0.97        42993 MULTIPOLYGON (((106.8631 -6...\n5           5599      1.76         8971 MULTIPOLYGON (((106.8369 -6...\n6          11276      0.47        71628 MULTIPOLYGON (((106.8316 -6...\n```\n\n\n:::\n:::\n\n\nWe map our districts here manually.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndistrict_mapping <- c(\n    \"TAMAN SARI\" = \"Kec. Taman Sari\",\n    \"KEMAYORAN\" = \"Kec. Kemayoran\",\n    \"SAWAH BESAR\" = \"Kec. Sawah Besar\",\n    \"GAMBIR\" = \"Kec. Gambir\",\n    \"SENEN\" = \"Kec. Senen\",\n    \"CEMPAKA PUTIH\" = \"Kec. Cempaka Putih\",\n    \"MENTENG\" = \"Kec. Menteng\",\n    \"TANAH ABANG\" = \"Kec. Tanah Abang\",\n    \"JOHAR BARU\" = \"Kec. Johar Baru\",\n    \"KOJA\" = \"Kec. Koja\",\n    \"PENJARINGAN\" = \"Kec. Penjaringan\",\n    \"TANJUNG PRIOK\" = \"Kec. Tanjung Priok\",\n    \"CILINCING\" = \"Kec. Cilincing\",\n    \"GROGOL PETAMBURAN\" = \"Kec. Grogol Petamburan\",\n    \"PADEMANGAN\" = \"Kec. Pademangan\",\n    \"KELAPA GADING\" = \"Kec. Kelapa Gading\",\n    \"CENGKARENG\" = \"Kec. Cengkareng\",\n    \"TAMBORA\" = \"Kec. Tambora\",\n    \"KEBON JERUK\" = \"Kec. Kebon Jeruk\",\n    \"KALIDERES\" = \"Kec. Kali Deres\",\n    \"PAL MERAH\" = \"Kec. Palmerah\",\n    \"JATINEGARA\" = \"Kec. Jatinegara\",\n    \"KEMBANGAN\" = \"Kec. Kembangan\",\n    \"TEBET\" = \"Kec. Tebet\",\n    \"SETIABUDI\" = \"Kec. Setia Budi\",\n    \"MAMPANG PRAPATAN\" = \"Kec. Mampang Prapatan\",\n    \"PASAR MINGGU\" = \"Kec. Pasar Minggu\",\n    \"KEBAYORAN LAMA\" = \"Kec. Kebayoran Lama\",\n    \"KEBAYORAN BARU\" = \"Kec. Kebayoran Baru\",\n    \"CILANDAK\" = \"Kec. Cilandak\",\n    \"PESANGGRAHAN\" = \"Kec. Pesanggrahan\",\n    \"PANCORAN\" = \"Kec. Pancoran\",\n    \"JAGAKARSA\" = \"Kec. Jagakarsa\",\n    \"MATRAMAN\" = \"Kec. Matraman\",\n    \"PULOGADUNG\" = \"Kec. Pulo Gadung\",\n    \"KRAMATJATI\" = \"Kec. Kramat Jati\",\n    \"PASAR REBO\" = \"Kec. Pasar Rebo\",\n    \"DUREN SAWIT\" = \"Kec. Duren Sawit\",\n    \"MAKASAR\" = \"Kec. Makasar\",\n    \"CIRACAS\" = \"Kec. Ciracas\",\n    \"CIPAYUNG\" = \"Kec. Cipayung\",\n    \"CAKUNG\" = \"Kec. Cakung\"\n)\n\nbatas <- batas %>%\n  mutate(district = district_mapping[district])\n```\n:::\n\n\n### 1.1 EDA at the Provincial Level\n\n#### 1.1.1 Overall Distribution of Schools\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = jakarta_schools) +\n  geom_bar(aes(x = city_name, fill = city_name)) +\n  scale_fill_viridis_d(option = \"plasma\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    plot.title = element_text(size = 12, face = \"bold\"),\n    legend.position = \"none\"\n  ) +\n  labs(\n    title = \"Distribution of Schools Across Jakarta\",\n    x = \"City\",\n    y = \"Number of Schools\"\n  )\n```\n\n::: {.cell-output-display}\n![](takehome3_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n**Key Observations**:\n\n-   The plot reveals significant disparity in school distribution across Jakarta\n-   East Jakarta (Timur) has the highest number of schools, followed by West Jakarta (Barat) then South Jakarta (Selatan). This is consistent with the population density distribution in Jakarta.\n\n#### 1.1.2 Distribution of School Levels\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = jakarta_schools) +\n  geom_bar(aes(x = city_name, fill = school_level)) +\n  scale_fill_viridis_d(option = \"plasma\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    plot.title = element_text(size = 12, face = \"bold\")\n  ) +\n  labs(\n    title = \"Distribution of School Levels Across Jakarta\",\n    x = \"City\",\n    y = \"Number of Schools\",\n    fill = \"School Level\"\n  )\n```\n\n::: {.cell-output-display}\n![](takehome3_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n**Key Observations**:\n\n-   Across all municipalities, elementary schools are the most common\n-   There is a relatively consistent proportion of Junior and Senior High Schools\n-   Special Education schools are less common but present in all municipalities\n-   While total numbers differ, the proportional distribution of school levels remains fairly consistent across cities, suggesting **planned distribution** rather than random clustering\n\n#### 1.1.3 School Density Across Jakarta\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_sf(data = adm2, aes(fill = lengths(st_intersects(adm2, jakarta_schools)))) +\n  scale_fill_viridis_c(option = \"plasma\") +\n  theme_minimal() +\n  labs(\n    title = \"School Density Across Jakarta\",\n    fill = \"Number of\\nSchools\"\n  )\n```\n\n::: {.cell-output-display}\n![](takehome3_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n##### 1.1.4 Population Density in Jakarta\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_sf(data = batas, aes(fill = popn_density)) +\n  scale_fill_viridis_c(\n    option = \"plasma\",\n    labels = scales::comma_format()\n  ) +\n  theme_minimal() +\n  labs(\n    title = \"Population Density in Jakarta\",\n    fill = \"Population\\nDensity\\n(per km²)\"\n  )\n```\n\n::: {.cell-output-display}\n![](takehome3_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n**Key Observations**:\n\n-   The density map reveals high population clusters in central Jakarta (yellow/orange areas)\n-   There is an interesting mismatch with school density in some areas\n-   Several high-density pockets are scattered across Jakarta\n\n#### 1.5 Summary\n\n-   Our preliminary EDA at the provincial level is too macro to provide detailed insights, but necessary to understand the overall distribution of schools in Jakarta\n\n## 2.0 Additional EDA\n\nWe note that Jakarta uses\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Convert coordinate systems for accurate distance measurement \n# UTM Zone 48S (EPSG:32748) is appropriate for Jakarta \njakarta_schools_utm <- st_transform(jakarta_schools, 32748) \nadm2_utm <- st_transform(adm2, 32748)\nbatas_utm <- st_transform(batas, 32748)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# For jakarta_schools_utm\nglimpse(jakarta_schools_utm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 4,762\nColumns: 12\n$ province_name                  <chr> \"DKI JAKARTA\", \"DKI JAKARTA\", \"DKI JAKA…\n$ city_name                      <chr> \"Kota Jakarta Pusat\", \"Kota Jakarta Pus…\n$ district_name                  <chr> \"Kec. Tanah Abang\", \"Kec. Senen\", \"Kec.…\n$ school_name                    <chr> \"SD NEGERI KEBON MELATI 01 PG\", \"SDN Ke…\n$ stage                          <chr> \"SD\", \"SD\", \"SD\", \"SMA\", \"SMK\", \"SD\", \"…\n$ status                         <chr> \"N\", \"N\", \"N\", \"S\", \"S\", \"N\", \"S\", \"N\",…\n$ province_area                  <dbl> 664, 664, 664, 664, 664, 664, 664, 664,…\n$ total_population               <dbl> 10679951, 10679951, 10679951, 10679951,…\n$ total_education_age_population <dbl> 3235408, 3235408, 3235408, 3235408, 323…\n$ geometry                       <POINT [m]> POINT (700704.4 9315085), POINT (…\n$ school_level                   <chr> \"Elementary\", \"Elementary\", \"Elementary…\n$ school_type                    <chr> \"Public\", \"Public\", \"Public\", \"Private\"…\n```\n\n\n:::\n\n```{.r .cell-code}\n# For batas_utm\nglimpse(batas_utm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 261\nColumns: 10\n$ OBJECT_ID      <dbl> 25477, 25478, 25397, 25400, 25390, 25391, 25394, 25386,…\n$ province       <chr> \"DKI JAKARTA\", \"DKI JAKARTA\", \"DKI JAKARTA\", \"DKI JAKAR…\n$ city           <chr> \"Kota Jakarta Barat\", \"Kota Jakarta Barat\", \"Kota Jakar…\n$ district       <chr> \"Kec. Taman Sari\", \"Kec. Taman Sari\", \"Kec. Kemayoran\",…\n$ subdistrict    <chr> \"KEAGUNGAN\", \"GLODOK\", \"HARAPAN MULIA\", \"CEMPAKA BARU\",…\n$ population     <dbl> 21609, 9069, 29085, 41913, 15793, 33383, 35906, 21828, …\n$ total_families <dbl> 7255, 3273, 9217, 13766, 5599, 11276, 12817, 7328, 3049…\n$ area_size      <dbl> 0.36, 0.37, 0.53, 0.97, 1.76, 0.47, 1.31, 1.14, 0.82, 0…\n$ popn_density   <dbl> 60504, 24527, 54465, 42993, 8971, 71628, 27463, 19144, …\n$ geometry       <MULTIPOLYGON [m]> MULTIPOLYGON (((700997 9320..., MULTIPOLYG…\n```\n\n\n:::\n\n```{.r .cell-code}\n# For column names\nnames(jakarta_schools_utm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"province_name\"                  \"city_name\"                     \n [3] \"district_name\"                  \"school_name\"                   \n [5] \"stage\"                          \"status\"                        \n [7] \"province_area\"                  \"total_population\"              \n [9] \"total_education_age_population\" \"geometry\"                      \n[11] \"school_level\"                   \"school_type\"                   \n```\n\n\n:::\n\n```{.r .cell-code}\nnames(batas_utm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"OBJECT_ID\"      \"province\"       \"city\"           \"district\"      \n [5] \"subdistrict\"    \"population\"     \"total_families\" \"area_size\"     \n [9] \"popn_density\"   \"geometry\"      \n```\n\n\n:::\n\n```{.r .cell-code}\n# For dimensions\ndim(jakarta_schools_utm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4762   12\n```\n\n\n:::\n\n```{.r .cell-code}\ndim(batas_utm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 261  10\n```\n\n\n:::\n:::\n\n\nWe'll now look at school density per subdistrict:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate school density per subdistrict\n# Join school counts with batas dataset\nschool_counts <- st_join(batas_utm, jakarta_schools_utm) %>%\n  group_by(OBJECT_ID) %>%\n  summarise(\n    total_schools = n(),\n    elementary_schools = sum(school_level == \"Elementary\"),\n    junior_schools = sum(school_level == \"Junior High\"),\n    senior_schools = sum(school_level == \"Senior High\"),\n    public_schools = sum(school_type == \"Public\"),\n    private_schools = sum(school_type == \"Private\")\n  )\n\n# Visualize school density metrics\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ntm_shape(school_counts) +\n  tm_fill(\"total_schools\", \n          style = \"quantile\",\n          palette = \"viridis\") +\n  tm_borders() +\n  tm_layout(title = \"School Density by Subdistrict\")\n```\n\n::: {.cell-output-display}\n![](takehome3_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nAs we can see, there are some spots (in the middle and the north of Jakarta where there seems to be sparse coverage of schools. Let's cross reference our school accessibility index for more info:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate centroids\ncentroids <- st_centroid(batas_utm)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: st_centroid assumes attributes are constant over geometries\n```\n\n\n:::\n\n```{.r .cell-code}\n# Create distance matrix\ndist_matrix <- st_distance(centroids, jakarta_schools_utm)\n\n# Find minimum distance for each centroid\nmin_distances <- apply(dist_matrix, 1, min)\n\n# Add to batas\nbatas_utm$nearest_school_dist <- min_distances\n\n# Visualize\ntm_shape(batas_utm) +\n  tm_fill(\"nearest_school_dist\", \n          style = \"quantile\",\n          palette = \"viridis\",\n          title = \"Distance (m)\") +\n  tm_borders() +\n  tm_layout(title = \"Distance to Nearest School\")\n```\n\n::: {.cell-output-display}\n![](takehome3_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n### Key Observations:\n\n1.  Spatial Distribution Patterns:\n\n2.  Central Jakarta shows high school density (8-14 schools) but very short distances to nearest schools (4-97m)\n\n3.  Outer regions, particularly in the east and west, have higher numbers of schools (26-65) but longer distances (294-1,014m)\n\n4.  Some subdistricts show an interesting mismatch: high school counts but relatively long distances, suggesting uneven distribution within the subdistrict\n\n### Accessibility implications\n\n1.  The central areas demonstrate better accessibility (darker purple in distance map)\n\n2.  Peripheral areas (yellow) show reduced accessibility despite sometimes having more schools\n\n3.  This suggests that school placement might not be optimally aligned with population distribution.\n\n## 3.0 Clustering EDA\n\nWe'll start by using hierarchical clustering. Hierarchical clustering provides a systematic, data-driven approach to identify groups of subdistricts with similar educational characteristics. This helps us select representative areas for detailed GWR analysis while ensuring we capture the full range of educational patterns in Jakarta.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# First, create a normalized dataset with relevant variables\nclustering_data <- school_counts %>%\n  st_drop_geometry() %>%  # Remove geometry for numerical calculations\n  mutate(\n    school_density = as.numeric(total_schools),\n    elementary_ratio = as.numeric(elementary_schools / total_schools),\n    junior_ratio = as.numeric(junior_schools / total_schools),\n    senior_ratio = as.numeric(senior_schools / total_schools),\n    public_ratio = as.numeric(public_schools / total_schools)\n  ) %>%\n  # Select only numeric columns for clustering\n  select(school_density, elementary_ratio, junior_ratio, \n         senior_ratio, public_ratio)\n\nsummary(clustering_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n school_density  elementary_ratio  junior_ratio     senior_ratio   \n Min.   : 1.00   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:10.00   1st Qu.:0.4615   1st Qu.:0.1429   1st Qu.:0.1429  \n Median :16.00   Median :0.5600   Median :0.2000   Median :0.2000  \n Mean   :18.14   Mean   :0.5650   Mean   :0.2085   Mean   :0.2100  \n 3rd Qu.:24.00   3rd Qu.:0.6667   3rd Qu.:0.2688   3rd Qu.:0.2778  \n Max.   :65.00   Max.   :1.0000   Max.   :0.4444   Max.   :1.0000  \n                 NA's   :2        NA's   :2        NA's   :2       \n  public_ratio   \n Min.   :0.0000  \n 1st Qu.:0.3604  \n Median :0.4800  \n Mean   :0.4888  \n 3rd Qu.:0.6250  \n Max.   :1.0000  \n NA's   :2       \n```\n\n\n:::\n\n```{.r .cell-code}\nstr(clustering_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [261 × 5] (S3: tbl_df/tbl/data.frame)\n $ school_density  : num [1:261] 3 10 30 7 5 14 28 15 4 16 ...\n $ elementary_ratio: num [1:261] 0.333 0.7 0.333 0.714 0.6 ...\n $ junior_ratio    : num [1:261] 0 0.2 0.3 0.143 0.2 ...\n $ senior_ratio    : num [1:261] 0.667 0.1 0.367 0.143 0.2 ...\n $ public_ratio    : num [1:261] 1 0.7 0.267 0.857 0.2 ...\n```\n\n\n:::\n:::\n\n\nWe now prepare our distance matrix.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Normalize the data\nnormalized_data <- scale(clustering_data)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfeature_dist <- dist(normalized_data)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 4. Perform hierarchical clustering\nhc <- hclust(feature_dist, method = \"ward.D2\")\n```\n:::\n\n\nGreat! let's now plot the dendrogram.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 5. Plot dendrogram\nplot(hc, main = \"Hierarchical Clustering of Jakarta Subdistricts\",\n     xlab = \"Subdistricts\", ylab = \"Height\")\n```\n\n::: {.cell-output-display}\n![](takehome3_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 6. Cut tree to get 5 clusters\nhc_clusters <- cutree(hc, k = 5)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 7. Add clusters back to spatial data\nschool_counts$hc_cluster <- as.factor(hc_clusters)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 8. Visualize clusters spatially\ntm_shape(school_counts) +\n  tm_fill(\"hc_cluster\", \n          palette = \"Set3\",\n          title = \"Hierarchical Clusters\") +\n  tm_borders() +\n  tm_layout(title = \"Traditional Hierarchical Clustering\")\n```\n\n::: {.cell-output-display}\n![](takehome3_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n::: callout-note\nFor hclust, we use Ward's method, also called Ward's minimum variance method, is a criterion used in hierarchical clustering that focuses on minimizing the total within-cluster variance. The \"D2\" variant specifically refers to the squared Euclidean distance implementation. It's good for finding spatial clusters that represent similar administrative or functional areas.\n:::\n\n## 4.0 Skater Clustering\n\nWe'll now use Skater to take a glance from a MST (Minimum Spanning Tree) approach. Although we will probably use skater to define our local GWR later, and set up bandwidth parameters, we'll still be considering our previous hclust.\n\n### 4.1.1 Create neighborhood\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclustering_data <- school_counts %>%\n  st_drop_geometry() %>%\n  mutate(\n    school_density = as.numeric(total_schools),\n    elementary_ratio = elementary_schools/total_schools,\n    junior_ratio = junior_schools/total_schools,\n    senior_ratio = senior_schools/total_schools,\n    public_ratio = public_schools/total_schools\n  ) %>%\n  select(school_density, elementary_ratio, junior_ratio, \n         senior_ratio, public_ratio) %>%\n  as.data.frame()\n```\n:::\n\n\nAfter the neighbour is done, we construct the queens matrix/spatial weights with costs.\n\n\n::: {.cell}\n\n```{.r .cell-code}\njakarta_nb <- poly2nb(school_counts, queen=TRUE)\n# 2. Calculate edge costs using the neighborhood structure\nlcosts <- nbcosts(jakarta_nb, clustering_data)\n\n# 3. Create spatial weights with costs\njakarta.w <- nb2listw(jakarta_nb, \n                     lcosts, \n                     style=\"B\")\n\n# 4. Create minimum spanning tree\njakarta.mst <- mstree(jakarta.w)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 5. Get coordinates for plotting\ncoords <- st_coordinates(st_centroid(school_counts))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: st_centroid assumes attributes are constant over geometries\n```\n\n\n:::\n\n```{.r .cell-code}\n# 6. Plot the MST\nplot(st_geometry(school_counts), \n     border=gray(.5))\nplot.mst(jakarta.mst, \n         coords, \n         col=\"blue\", \n         cex.lab=0.7, \n         cex.circles=0.005, \n         add=TRUE)\n```\n\n::: {.cell-output-display}\n![](takehome3_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 7. Compute SKATER clusters\nclust5 <- skater(edges = jakarta.mst[,1:2], \n                 data = as.matrix(clustering_data), \n                 method = \"euclidean\", \n                 ncuts = 4)  # This will give 5 clusters\n\n# 8. Add clusters to spatial data\nschool_counts$skater_cluster <- as.factor(clust5$groups)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 9. Visualize final clusters\ntm_shape(school_counts) +\n    tm_fill(\"skater_cluster\", \n            palette = \"Set3\",\n            title = \"SKATER Clusters\") +\n    tm_borders() +\n    tm_layout(title = \"School Clusters in Jakarta\")\n```\n\n::: {.cell-output-display}\n![](takehome3_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 10. Check cluster sizes\nprint(\"Number of schools in each cluster:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Number of schools in each cluster:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(table(clust5$groups))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  1   2   3   4   5 \n204   6  20  23   8 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 11. Create cluster summary\ncluster_summary <- school_counts %>%\n    st_drop_geometry() %>%\n    group_by(skater_cluster) %>%\n    summarise(\n        n_areas = n(),\n        avg_schools = mean(total_schools),\n        avg_elementary = mean(elementary_schools),\n        avg_junior = mean(junior_schools),\n        avg_senior = mean(senior_schools)\n    )\n\nprint(\"Cluster Summary:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Cluster Summary:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(cluster_summary)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 6\n  skater_cluster n_areas avg_schools avg_elementary avg_junior avg_senior\n  <fct>            <int>       <dbl>          <dbl>      <dbl>      <dbl>\n1 1                  204        15.2           8.29       3.26       3.35\n2 2                    6         2.5          NA         NA         NA   \n3 3                   20        34.3          18.0        8.6        7.35\n4 4                   23        29.3          16.4        5.61       6.74\n5 5                    8        32.6          18.5        7.25       6.62\n```\n\n\n:::\n:::\n\n\nKey Takeaways:\n\n1.  Clear spatial inequality in school distribution\n\n2.  Cluster 3 appears to be best-served educationally\n\n3.  Most areas fall into Cluster 1, suggesting this is the \"standard\" level of service\n\n4.  Secondary school availability is consistently lower than elementary\n\n### 4.1.2 Takeaways from hclust vs Skater\n\nSKATER has a more uneven distribution with one dominant cluster (turquoise) covering most of Jakarta, compared to hierarchical clustering with a more fragmented clustering.\n\n## 5.0 GWR for Education level\n\nWe'll first extract the education levels from our initial batas dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# First read the original file with all columns \nbatas_full <- st_read(\"data/geospatial\", layer = \"BATAS_DESA_DESEMBER_2019_DUKCAPIL_DKI_JAKARTA\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `BATAS_DESA_DESEMBER_2019_DUKCAPIL_DKI_JAKARTA' from data source \n  `C:\\Users\\yapho\\Documents\\SMU\\smu y4\\is415\\hxyap_IS415\\takehome\\ex3\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 269 features and 161 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 106.3831 ymin: -6.370815 xmax: 106.9728 ymax: -5.184322\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\nbatas_full_utm <- st_transform(batas_full, 32748)\n\n# Create education metrics with original column names then rename\nbatas_edu_levels <- batas_full_utm %>%\n  mutate(\n    # Higher education ratio (diploma and above)\n    higher_ed_ratio = (DIPLOMA_I + DIPLOMA_II + DIPLOMA_IV + \n                      STRATA_II + STRATA_III) / JUMLAH_PEN,\n    # Basic education completion ratio\n    basic_ed_ratio = (TAMAT_SD + SLTP + SLTA) / JUMLAH_PEN,\n    # No education ratio \n    no_ed_ratio = (TIDAK_BELU + BELUM_TAMA) / JUMLAH_PEN\n  ) %>%\n  # Select and rename columns\n  select(\n    PROVINSI, KAB_KOTA, KECAMATAN, DESA_KELUR,\n    JUMLAH_PEN, higher_ed_ratio, basic_ed_ratio, \n    no_ed_ratio, geometry\n  ) %>%\n  rename(\n    province = PROVINSI,\n    city = KAB_KOTA,\n    district = KECAMATAN,\n    subdistrict = DESA_KELUR,\n    population = JUMLAH_PEN\n  ) %>%\n  # Filter and standardize city names\n  filter(!is.na(city) & city != \"KEPULAUAN SERIBU\") %>%\n  mutate(city = case_when(\n    city == \"JAKARTA BARAT\" ~ \"Kota Jakarta Barat\",\n    city == \"JAKARTA PUSAT\" ~ \"Kota Jakarta Pusat\",\n    city == \"JAKARTA SELATAN\" ~ \"Kota Jakarta Selatan\",\n    city == \"JAKARTA TIMUR\" ~ \"Kota Jakarta Timur\",\n    city == \"JAKARTA UTARA\" ~ \"Kota Jakarta Utara\",\n    TRUE ~ city\n  ))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Now proceed with the cluster analysis\neast_cluster_edu <- batas_edu_levels %>%\n  filter(city == \"Kota Jakarta Timur\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncentral_cluster_edu <- batas_edu_levels %>%\n  filter(city == \"Kota Jakarta Pusat\")\n```\n:::\n\n\n### 5.1.1 Cluster data prep\n\nNow that we have our filtered education levels for our clusters, let's begin.\n\n### 5.1.1 Education pattern visualization\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 3. Visualize education patterns\nedu_map <- tm_shape(batas_edu_levels) +\n tm_polygons(alpha = 0.1) +\n tm_shape(east_cluster_edu) +\n tm_fill(col = \"higher_ed_ratio\", \n         palette = \"Reds\",\n         title = \"Higher Education Ratio\") +\n tm_shape(central_cluster_edu) +\n tm_fill(col = \"higher_ed_ratio\",\n         palette = \"Blues\",\n         title = \"Higher Education Ratio\") +\n tm_layout(title = \"Education Levels: East vs Central Jakarta\")\n\nprint(edu_map)\n```\n\n::: {.cell-output-display}\n![](takehome3_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n\nIt seems central Jakarta trends more educated overall, with a more uniform distribution of education in central compared to East Jakarta. There seems to also be clustering of high education rates, suggesting possible neighborhood effects.\n\n### 5.1.2 Building GWR model\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndistrict_boundaries <- batas_utm %>%\n  group_by(city, district) %>%\n  summarise(\n    total_population = sum(population),\n    total_area = sum(area_size),\n    popn_density = total_population / total_area,\n    do_union = TRUE,\n    .groups = 'drop'\n  )\n\n# Then do your school density analysis at district level\nschool_density_analysis <- district_boundaries %>%\n  mutate(\n    total_schools = lengths(st_intersects(., jakarta_schools_utm)),\n    elementary_schools = lengths(st_intersects(., \n                               jakarta_schools_utm[jakarta_schools_utm$school_level == \"Elementary\",])),\n    junior_schools = lengths(st_intersects(., \n                           jakarta_schools_utm[jakarta_schools_utm$school_level == \"Junior High\",])),\n    senior_schools = lengths(st_intersects(., \n                           jakarta_schools_utm[jakarta_schools_utm$school_level == \"Senior High\",])),\n    special_schools = lengths(st_intersects(., \n                            jakarta_schools_utm[jakarta_schools_utm$school_level == \"Special Education\",])),\n    # Calculate school density (schools per square km)\n    school_density = total_schools / total_area,\n    elementary_density = elementary_schools / total_area,\n    junior_high_density = junior_schools / total_area,\n    senior_high_density = senior_schools / total_area,\n    special_ed_density = special_schools / total_area\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(school_density_analysis)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 15 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 686587.9 ymin: 9311572 xmax: 700349.5 ymax: 9325980\nProjected CRS: WGS 84 / UTM zone 48S\n# A tibble: 6 × 16\n  city               district           total_population total_area popn_density\n  <chr>              <chr>                         <dbl>      <dbl>        <dbl>\n1 Kota Jakarta Barat Kec. Cengkareng              562072      26.5        21178.\n2 Kota Jakarta Barat Kec. Grogol Petam…           239565      11.0        21878.\n3 Kota Jakarta Barat Kec. Kali Deres              435837      28.8        15144.\n4 Kota Jakarta Barat Kec. Kebon Jeruk             355830      17.4        20497.\n5 Kota Jakarta Barat Kec. Kembangan               296004      25.5        11617.\n6 Kota Jakarta Barat Kec. Palmerah                231232       7.44       31080.\n# ℹ 11 more variables: geometry <POLYGON [m]>, total_schools <int>,\n#   elementary_schools <int>, junior_schools <int>, senior_schools <int>,\n#   special_schools <int>, school_density <dbl>, elementary_density <dbl>,\n#   junior_high_density <dbl>, senior_high_density <dbl>,\n#   special_ed_density <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Basic correlation analysis\nanalysis_data <- data.frame(\n  # Education ratios\n  higher_ed_ratio = batas_edu_levels$higher_ed_ratio,\n  basic_ed_ratio = batas_edu_levels$basic_ed_ratio,\n  no_ed_ratio = batas_edu_levels$no_ed_ratio,\n  \n  # School accessibility metrics\n  school_density = clustering_data$school_density,\n  elementary_ratio = clustering_data$elementary_ratio,\n  junior_ratio = clustering_data$junior_ratio,\n  senior_ratio = clustering_data$senior_ratio,\n  public_ratio = clustering_data$public_ratio,\n  nearest_school_dist = batas_utm$nearest_school_dist\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create correlation matrix\ncorrelation_matrix <- cor(analysis_data, use = \"complete.obs\")\n\n# Visualize correlations\ncorrplot(correlation_matrix, \n         method = \"color\", \n         type = \"upper\",\n         addCoef.col = \"black\", \n         number.cex = 0.7,\n         tl.cex = 0.7,\n         title = \"Correlation Matrix: Education Levels and School Accessibility\")\n```\n\n::: {.cell-output-display}\n![](takehome3_files/figure-html/unnamed-chunk-40-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create scatter plots for key relationships\np1 <- ggplot(analysis_data, aes(x = school_density, y = higher_ed_ratio)) +\n  geom_point(alpha = 0.6) +\n  geom_smooth(method = \"lm\", se = TRUE) +\n  labs(title = \"Higher Education vs School Density\",\n       x = \"School Density\",\n       y = \"Higher Education Ratio\") +\n  theme_minimal()\n\np2 <- ggplot(analysis_data, aes(x = nearest_school_dist, y = higher_ed_ratio)) +\n  geom_point(alpha = 0.6) +\n  geom_smooth(method = \"lm\", se = TRUE) +\n  labs(title = \"Higher Education vs Distance to Nearest School\",\n       x = \"Distance to Nearest School\",\n       y = \"Higher Education Ratio\") +\n  theme_minimal()\n\np3 <- ggplot(analysis_data, aes(x = senior_ratio, y = higher_ed_ratio)) +\n  geom_point(alpha = 0.6) +\n  geom_smooth(method = \"lm\", se = TRUE) +\n  labs(title = \"Higher Education vs Senior School Ratio\",\n       x = \"Senior School Ratio\",\n       y = \"Higher Education Ratio\") +\n  theme_minimal()\n\n# Arrange plots\ngrid.arrange(p1, p2, p3, ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](takehome3_files/figure-html/unnamed-chunk-41-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Fit multiple regression model\nmodel <- lm(higher_ed_ratio ~ school_density + nearest_school_dist + \n            elementary_ratio + junior_ratio + senior_ratio + public_ratio,\n            data = analysis_data)\n\n# Model diagnostics\nsummary(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = higher_ed_ratio ~ school_density + nearest_school_dist + \n    elementary_ratio + junior_ratio + senior_ratio + public_ratio, \n    data = analysis_data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.14810 -0.05414 -0.00542  0.03036  0.32091 \n\nCoefficients:\n                      Estimate Std. Error t value Pr(>|t|)  \n(Intercept)          2.971e-01  1.313e-01   2.263   0.0245 *\nschool_density       7.974e-04  4.377e-04   1.822   0.0696 .\nnearest_school_dist  1.361e-05  3.077e-05   0.442   0.6587  \nelementary_ratio    -1.444e-01  1.315e-01  -1.099   0.2730  \njunior_ratio        -1.464e-01  1.407e-01  -1.041   0.2990  \nsenior_ratio        -2.078e-01  1.353e-01  -1.535   0.1259  \npublic_ratio         1.610e-03  2.695e-02   0.060   0.9524  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.076 on 252 degrees of freedom\n  (2 observations deleted due to missingness)\nMultiple R-squared:  0.0269,\tAdjusted R-squared:  0.003728 \nF-statistic: 1.161 on 6 and 252 DF,  p-value: 0.3278\n```\n\n\n:::\n\n```{.r .cell-code}\nols_vif_tol(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Variables  Tolerance       VIF\n1      school_density 0.95295384  1.049369\n2 nearest_school_dist 0.97602641  1.024562\n3    elementary_ratio 0.05078453 19.691034\n4        junior_ratio 0.12818234  7.801387\n5        senior_ratio 0.08188472 12.212291\n6        public_ratio 0.76809224  1.301927\n```\n\n\n:::\n:::\n\n\n### 5.1.3 Analysis\n\n-   The very low R-squared (0.02692) and adjusted R-squared (0.003747) suggest that:\n\n    -   The global model explains very little of the variation in higher education ratios\n\n    -   GWR might be more appropriate since it can capture local variations that this global model misses\n\n-   Variable selection for GWR:\n\n    -   Only school_density shows marginal significance (p = 0.0697)\n\n    -   nearest_school_dist has very low significance (p = 0.6549)\n\n    -   The ratio variables all have relatively high p-values\n\nWe will now compare simple and complex models.\n\n## 6.0 It's time for GWR\n\nOur analysis employs both fixed and adaptive bandwidth GWR to examine how school density affects higher education attainment across Jakarta. This dual approach provides complementary insights:\n\n1.  Spatial Variation in Relationships:\n\n-   Fixed bandwidth GWR reveals the base relationship between school accessibility and education levels at a consistent spatial scale\n\n-   Adaptive bandwidth GWR accounts for Jakarta's varying urban density, providing more localized insights in densely populated areas\n\n2.  Policy Implications:\n\n-   Areas with strong positive relationships between school density and education levels might benefit most from new schools\n\n-   Regions where the relationship is weak may need different interventions beyond improving school accessibility\n\n-   Local context matters: what works in one district may not work in another.\n\nWe thus embark being using some centroids to calculate logical centers for regions in order to extrapolate our relevant data to build both models. Afterwards, we can compare them in order to derive some insights on how the factors have implications on education levels, both locally and globally.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# First identify complete cases\ncomplete_indices <- which(!is.na(clustering_data$senior_ratio))\n\n# Calculate centroids first, explicitly handling the warning\ncentroids <- st_centroid(batas_edu_levels, of_largest_polygon = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: st_centroid assumes attributes are constant over geometries\n```\n\n\n:::\n\n```{.r .cell-code}\ncentroid_coords <- st_coordinates(centroids)[complete_indices,]\n\n# Create spatial dataframes with modern CRS syntax\nsimple_gwr_data <- SpatialPointsDataFrame(\n  coords = centroid_coords,\n  data = data.frame(\n    higher_ed_ratio = batas_edu_levels$higher_ed_ratio[complete_indices],\n    school_density = clustering_data$school_density[complete_indices]\n  ),\n  proj4string = CRS(\"EPSG:32748\")  # Modern syntax for UTM Zone 48S\n)\n\nselected_gwr_data <- SpatialPointsDataFrame(\n  coords = centroid_coords,\n  data = data.frame(\n    higher_ed_ratio = batas_edu_levels$higher_ed_ratio[complete_indices],\n    school_density = clustering_data$school_density[complete_indices],\n    senior_ratio = clustering_data$senior_ratio[complete_indices]\n  ),\n  proj4string = CRS(\"EPSG:32748\")  # Modern syntax for UTM Zone 48S\n)\n\n# Since the data is already in UTM Zone 48S, we don't need to transform it\nsimple_gwr_data_proj <- simple_gwr_data\nselected_gwr_data_proj <- selected_gwr_data\n```\n:::\n\n\nCool. Let's now do other variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbw.fixed <- bw.gwr(\n  formula = higher_ed_ratio ~ school_density, \n  data = simple_gwr_data_proj,\n  approach = \"CV\",\n  kernel = \"gaussian\",\n  adaptive = FALSE,\n  longlat = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nFixed bandwidth: 22400.97 CV score: 1.482623 \nFixed bandwidth: 13847.33 CV score: 1.446493 \nFixed bandwidth: 8560.89 CV score: 1.365928 \nFixed bandwidth: 5293.689 CV score: 1.229182 \nFixed bandwidth: 3274.449 CV score: 1.11576 \nFixed bandwidth: 2026.489 CV score: 1.05054 \nFixed bandwidth: 1255.208 CV score: 1.046343 \nFixed bandwidth: 778.5296 CV score: 1.416962 \nFixed bandwidth: 1549.811 CV score: 1.033807 \nFixed bandwidth: 1731.886 CV score: 1.037553 \nFixed bandwidth: 1437.283 CV score: 1.034906 \nFixed bandwidth: 1619.357 CV score: 1.034602 \nFixed bandwidth: 1506.829 CV score: 1.033832 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Run fixed bandwidth GWR\ngwr.fixed <- gwr.basic(\n  formula = higher_ed_ratio ~ school_density,\n  data = simple_gwr_data_proj,\n  bw = bw.fixed,\n  kernel = \"gaussian\",\n  adaptive = FALSE,\n  longlat = FALSE)\n\nbw.adaptive <- bw.gwr(\n  formula = higher_ed_ratio ~ school_density,\n  data = simple_gwr_data_proj,\n  approach = \"CV\",\n  kernel = \"gaussian\",\n  adaptive = TRUE,\n  longlat = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAdaptive bandwidth: 167 CV score: 1.429762 \nAdaptive bandwidth: 111 CV score: 1.38874 \nAdaptive bandwidth: 75 CV score: 1.341174 \nAdaptive bandwidth: 54 CV score: 1.297753 \nAdaptive bandwidth: 40 CV score: 1.256997 \nAdaptive bandwidth: 32 CV score: 1.229152 \nAdaptive bandwidth: 26 CV score: 1.20383 \nAdaptive bandwidth: 23 CV score: 1.184859 \nAdaptive bandwidth: 20 CV score: 1.168994 \nAdaptive bandwidth: 19 CV score: 1.160711 \nAdaptive bandwidth: 18 CV score: 1.157655 \nAdaptive bandwidth: 17 CV score: 1.152698 \nAdaptive bandwidth: 17 CV score: 1.152698 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Run adaptive bandwidth GWR\ngwr.adaptive <- gwr.basic(\n  formula = higher_ed_ratio ~ school_density,\n  data = simple_gwr_data_proj,\n  bw = bw.adaptive,\n  kernel = \"gaussian\",\n  adaptive = TRUE,\n  longlat = FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Convert SDF into sf data.frame\ngwr.sf.fixed <- st_as_sf(gwr.fixed$SDF) %>%\n  st_transform(st_crs(batas_edu_levels))\n\ngwr.sf.adaptive <- st_as_sf(gwr.adaptive$SDF) %>%\n  st_transform(st_crs(batas_edu_levels))\n\n# Compare models\nmodel_comparison <- data.frame(\n  Model = c(\"Fixed\", \"Adaptive\"),\n  Bandwidth = c(bw.fixed, bw.adaptive),\n  AICc = c(gwr.fixed$GW.diagnostic$AICc,\n           gwr.adaptive$GW.diagnostic$AICc),\n  R2 = c(gwr.fixed$GW.diagnostic$gw.R2,\n         gwr.adaptive$GW.diagnostic$gw.R2),\n  Adj_R2 = c(gwr.fixed$GW.diagnostic$gwR2.adj,\n             gwr.adaptive$GW.diagnostic$gwR2.adj)\n)\n\nprint(\"Model Diagnostics:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Model Diagnostics:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(model_comparison)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Model Bandwidth      AICc        R2    Adj_R2\n1    Fixed  1549.811 -631.6885 0.5947280 0.3526755\n2 Adaptive    17.000 -665.0109 0.3251825 0.2586090\n```\n\n\n:::\n:::\n\n\nAs we can see, our Fixed GWR has a higher R2, vs the adapative. This means in our fixed model the factors used have a higher relevancy to the education level compared to our adaptive model.\n\nAlthough AICC for selected (we drop accessibility in this case) is lower, it's more complex than the simple GWR. thus we should probably stick to the simple GWR so it's easier to compute and interpret.\n\nBelow are some pretty plots to help us understand the implications of our model(s), as well as a sweet summary.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfixed_r2_map <- tm_shape(batas_edu_levels) +\n  tm_polygons(alpha = 0.1) +\ntm_shape(gwr.sf.fixed) +  \n  tm_dots(col = \"Local_R2\",\n          size = 0.1,\n          border.col = \"gray60\",\n          border.lwd = 1,\n          palette = \"viridis\",\n          title = \"Local R² (Fixed)\") +\n  tm_layout(main.title = \"Fixed Bandwidth GWR\",\n            main.title.size = 1)\n\nadaptive_r2_map <- tm_shape(batas_edu_levels) +\n  tm_polygons(alpha = 0.1) +\ntm_shape(gwr.sf.adaptive) +  \n  tm_dots(col = \"Local_R2\",\n          size = 0.1,\n          border.col = \"gray60\",\n          border.lwd = 1,\n          palette = \"viridis\",\n          title = \"Local R² (Adaptive)\") +\n  tm_layout(main.title = \"Adaptive Bandwidth GWR\",\n            main.title.size = 1)\n\ntmap_arrange(fixed_r2_map, adaptive_r2_map, \n            asp=1, ncol=2)\n```\n\n::: {.cell-output-display}\n![](takehome3_files/figure-html/unnamed-chunk-46-1.png){width=672}\n:::\n:::\n\n\nHere's another visualization of the coefficients for the various subdistricts in both models. This will probably be helpful later on for further analysis on a local level.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfixed_coef_map <- tm_shape(batas_edu_levels) +\n  tm_polygons(alpha = 0.1) +\ntm_shape(gwr.sf.fixed) +  \n  tm_dots(col = \"school_density\",\n          size = 0.1,\n          border.col = \"gray60\",\n          border.lwd = 1,\n          palette = \"RdBu\",\n          title = \"Coefficient (Fixed)\") +\n  tm_layout(main.title = \"School Density Effect (Fixed)\",\n            main.title.size = 1)\n\nadaptive_coef_map <- tm_shape(batas_edu_levels) +\n  tm_polygons(alpha = 0.1) +\ntm_shape(gwr.sf.adaptive) +  \n  tm_dots(col = \"school_density\",\n          size = 0.1,\n          border.col = \"gray60\",\n          border.lwd = 1,\n          palette = \"RdBu\",\n          title = \"Coefficient (Adaptive)\") +\n  tm_layout(main.title = \"School Density Effect (Adaptive)\",\n            main.title.size = 1)\n\ntmap_arrange(fixed_coef_map, adaptive_coef_map, \n            asp=1, ncol=2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"school_density\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\nVariable(s) \"school_density\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](takehome3_files/figure-html/unnamed-chunk-47-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Summary of Local R2\ncat(\"\\nLocal R² Summary (Fixed):\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nLocal R² Summary (Fixed):\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(summary(gwr.fixed$SDF$Local_R2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.1598  0.3613  0.5836  0.5535  0.6912  0.9980 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"\\nLocal R² Summary (Adaptive):\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nLocal R² Summary (Adaptive):\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(summary(gwr.adaptive$SDF$Local_R2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n-0.1176  0.2020  0.2773  0.2829  0.3805  0.4695 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Summary of Coefficients\ncat(\"\\nCoefficient Summary (Fixed):\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCoefficient Summary (Fixed):\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(summary(gwr.fixed$SDF$school_density))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      Min.    1st Qu.     Median       Mean    3rd Qu.       Max. \n-5.817e-03 -7.093e-04  1.125e-05  2.957e-04  9.816e-04  5.726e-03 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"\\nCoefficient Summary (Adaptive):\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCoefficient Summary (Adaptive):\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(summary(gwr.adaptive$SDF$school_density))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      Min.    1st Qu.     Median       Mean    3rd Qu.       Max. \n-0.0012656 -0.0004350  0.0001717  0.0004574  0.0010657  0.0037250 \n```\n\n\n:::\n:::\n\n\nWe'll now export the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Transform coordinates back to WGS84 for mapping\nsimple_gwr_data_wgs84 <- spTransform(simple_gwr_data_proj, CRS(\"EPSG:4326\"))\n\ngwr_results <- list(\n  # Model results\n  fixed = list(\n    model = gwr.fixed,\n    bandwidth = bw.fixed,\n    local_R2 = gwr.fixed$SDF$Local_R2,\n    coefficients = gwr.fixed$SDF$school_density,\n    diagnostics = gwr.fixed$GW.diagnostic\n  ),\n  \n  adaptive = list(\n    model = gwr.adaptive,\n    bandwidth = bw.adaptive,\n    local_R2 = gwr.adaptive$SDF$Local_R2,\n    coefficients = gwr.adaptive$SDF$school_density,\n    diagnostics = gwr.adaptive$GW.diagnostic\n  ),\n  \n  # Spatial data with both coordinate systems\n  spatial = list(\n    coordinates_utm = coordinates(simple_gwr_data_proj),  # UTM coordinates for analysis\n    coordinates_wgs84 = coordinates(simple_gwr_data_wgs84),  # WGS84 coordinates for mapping\n    batas = st_transform(batas_edu_levels, 4326),  # Transform boundaries to WGS84 too\n    utm_crs = \"EPSG:32748\",\n    wgs84_crs = \"EPSG:4326\"\n  ),\n  \n  # Original data\n  data = list(\n    higher_ed_ratio = simple_gwr_data$higher_ed_ratio,\n    school_density = simple_gwr_data$school_density\n  )\n)\n\n# Save to RDS\nsaveRDS(gwr_results, \"data/rds/gwr_results.rds\")\n```\n:::\n\n\n### 7.0 Local GWR for targeted investment\n\nWe now move onto focusing on the local R\\^2. Given the earlier mention of the secondary/primary and also carrying on, senior high+ divide, we would like to know where should policy makers start with in pilot studies for investing more into public schools. Furthermore, we also want them to invest in areas where their money is more effective, so we are looking for higher R2.\n\nLet's start by finding our target city in Jakarta.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n # 1. Analyze city-level education patterns\ncity_education_summary <- batas_edu_levels %>%\n  st_drop_geometry() %>%  # Remove geometry for grouping\n  group_by(city) %>%\n  summarise(\n    mean_higher_ed = mean(higher_ed_ratio, na.rm = TRUE),\n    population = sum(population, na.rm = TRUE)\n  ) %>%\n  arrange(mean_higher_ed)  # Find city with lowest higher education rates\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncity_education_summary\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  city                 mean_higher_ed population\n  <chr>                         <dbl>      <dbl>\n1 Kota Jakarta Utara            0.115    1811898\n2 Kota Jakarta Barat            0.128    2525194\n3 Kota Jakarta Pusat            0.153    1147917\n4 Kota Jakarta Timur            0.159    3169571\n5 Kota Jakarta Selatan          0.211    2328846\n```\n\n\n:::\n:::\n\n\nWe'll choose Kota Jakarta Utara then! Let's create some district summaries for this city through some filter() and mutate for local R2.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get target city (Jakarta Utara has lowest higher ed ratio)\ntarget_city <- \"Kota Jakarta Utara\"\n\n# 2. First create district level summaries for target city\ntarget_districts <- school_density_analysis %>%\n  filter(city == target_city) %>%\n  # Get GWR results for these districts\n  mutate(\n    local_R2 = gwr.fixed$SDF$Local_R2[1:n()],  # Make sure this matches your district ordering\n    local_coef = gwr.fixed$SDF$school_density[1:n()]\n  )\n```\n:::\n\n\nWe then invent a metric called opportunity score to calculate\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 3. Calculate opportunity scores\nopportunity_districts <- target_districts %>%\n  mutate(\n    # Standardize metrics\n    density_score = scale(senior_high_density),\n    r2_score = scale(local_R2),\n    coef_score = scale(local_coef),\n    \n    # Create composite opportunity score\n    opportunity_score = case_when(\n      !is.na(local_R2) ~ \n        (r2_score * coef_score) * # Model strength\n        (-1 * density_score) * # Room for improvement (negative because lower density = more opportunity)\n        (1 / (1 + senior_high_density)) # Diminishing returns factor\n    ),\n    \n    # Categorize recommendations\n    recommendation = case_when(\n      opportunity_score > quantile(opportunity_score, 0.75, na.rm = TRUE) ~ \"High Priority\",\n      opportunity_score > quantile(opportunity_score, 0.5, na.rm = TRUE) ~ \"Medium Priority\",\n      opportunity_score > quantile(opportunity_score, 0.25, na.rm = TRUE) ~ \"Lower Priority\",\n      TRUE ~ \"Monitor\"\n    )\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 4. Visualize results\nggplot() +\n  geom_sf(data = opportunity_districts, aes(fill = opportunity_score)) +\n  scale_fill_viridis_c(option = \"magma\") +\n  labs(title = paste(\"Opportunity Zones in\", target_city),\n       subtitle = \"Areas with High Potential Return on School Investment\",\n       fill = \"Opportunity\\nScore\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](takehome3_files/figure-html/unnamed-chunk-54-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 5. Create summary table for policymakers\nopportunity_summary <- opportunity_districts %>%\n  st_drop_geometry() %>%\n  select(\n    district,\n    current_density = senior_high_density,\n    local_R2,\n    local_coefficient = local_coef,\n    opportunity_score,\n    recommendation\n  ) %>%\n  arrange(desc(opportunity_score))\n\n# Print top opportunities\nprint(head(opportunity_summary, n = 6))  # Show all districts in Jakarta Utara\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 6\n  district      current_density local_R2 local_coefficient opportunity_score[,1]\n  <chr>                   <dbl>    <dbl>             <dbl>                 <dbl>\n1 Kec. Pademan…           0.646    0.447         -0.000793                 0.344\n2 Kec. Koja               1.99     0.384         -0.000363                 0.233\n3 Kec. Kelapa …           1.41     0.693         -0.000835                 0.190\n4 Kec. Cilinci…           0.648    0.677         -0.000581                -0.152\n5 Kec. Tanjung…           1.78     0.615         -0.000258                -0.179\n6 Kec. Penjari…           0.764    0.371         -0.000213                -0.494\n# ℹ 1 more variable: recommendation <chr>\n```\n\n\n:::\n:::\n\n\nThus, through some data manipulation, we now have a shortlist of where we should invest in!\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Additional summary statistics\ncat(\"\\nSummary Statistics for\", target_city, \":\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nSummary Statistics for Kota Jakarta Utara :\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary_stats <- opportunity_summary %>%\n  summarise(\n    avg_density = mean(current_density, na.rm = TRUE),\n    avg_R2 = mean(local_R2, na.rm = TRUE),\n    avg_coef = mean(local_coefficient, na.rm = TRUE),\n    districts_high_priority = sum(recommendation == \"High Priority\", na.rm = TRUE),\n    districts_med_priority = sum(recommendation == \"Medium Priority\", na.rm = TRUE)\n  )\nprint(summary_stats)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 5\n  avg_density avg_R2  avg_coef districts_high_priority districts_med_priority\n        <dbl>  <dbl>     <dbl>                   <int>                  <int>\n1        1.21  0.531 -0.000507                       2                      1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nopportunity_districts_wgs84 <- st_transform(opportunity_districts, 4326)\n\n# Save opportunity scores with both projections\nopportunity_data <- list(\n  spatial = list(\n    districts_utm = opportunity_districts,\n    districts_wgs84 = opportunity_districts_wgs84,\n    utm_crs = \"EPSG:32748\",\n    wgs84_crs = \"EPSG:4326\"\n  ),\n  summary = opportunity_summary,\n  target_city = target_city,\n  stats = summary_stats\n)\n\nsaveRDS(opportunity_data, \"data/rds/opp_score.rds\")\n```\n:::\n\n\n## 8.0 Prototyping UI design.\n\nFor UI design prototyping, these were my guiding questions:\n\n1.  What am I measuring?\n2.  Who is it for?\n3.  When and how are we looking at it?\n\nLet's address these questions and how I used them to build some prototypes.\n\n### 8.1.1 Answering the questions\n\nGiven that I took on handling the GWR analysis on this app, it was a natural conclusion from our course work to think about using fixed/adaptive bandwidth to build a predictive model, and from there extrapolate insights about the predictiveness of the parameters we've chosen.\n\nBut then, who is it for? Given the nature of the data, my assumption was that we would be building this for potential policymakers in order to choose what regions or subdistricts to look into, as seen in the previous analysis. Thus, we followed the journey of our data to conclude and find some sub districts in Jakarta to focus on when it came to efforts to expanding density of public senior high schools and such, in order to make higher education more accessible and easy with proven results based on the relevancy of density instead of other potential confounding factors, which we have handled through R2 and other metrics.\n\nThis leads us to our final question: When and how? Since this dashboard is more of a snapshot of data than urgent, LIVE data, I think it is an easy assumption that we can use this as a simple visual dashboard to present our findings, with perhaps some features to download a csv for further analysis. Thus, this is where we start off for our UI design.\n\n### 8.2 Storyboarding for features\n\nAfter looking at our data and analysis, I came up with 2 possible goals for our dashboard:\n\n1.  GWR tab – the user should be able to:\n    1.  See local R\\^2 and coefficients at a glance\n    2.  Download a csv of the results for verification/use\n    3.  Choose between fixed and adaptive bandwidth\n    4.  Compare models at a glance\n    5.  (Optional) Search through results in the dashboard\n2.  Analysis tab - the user should be able to:\n    1.  Show opportunity score and other metrics to pinpoint what districts / subdistricts to develop\n    2.  Look at statistics for a highlighted district at a glance.\n    3.  Download a csv for results\n    4.  (Optional) Search results of csv in dashboard.\n\nBased on these, there were some designs drafted:\n\n![Prototype 1](img/proto1.png){width=\"400\"} ![Prototype 2](img/proto2.png){width=\"400\"} ![Prototype 3](img/proto3.png){width=\"400\"}\n\nIn the end, I ended up with a variant of Prototype 1 and 3 as #2 might squeeze the navigational elements too close when integrating with my teams' components. I liked the side bar on 3, but I also liked the comfortable UI toggle from Prototype 1 next to the downloads which lets policy makers easily download the data after tabbing through the visualizations.\n\nThus #1 and #3 birthed my final prototype, which fulfilled all the points mentioned above in my \"Users' wants\" list –\n\n![Final UI](img/final.png){width=\"400\"}\n\nBelow is an annotation of how this final design, inspired from the previous designs, neatly fulfils the user's wants.\n\n![Annotated final UI](img/annotated.png){width=\"400\"}\n\nThus, we now settle on this final UI which helps us efficiently and quickly communicate insights to policy makers, and delivers the analysis and data we've done so far through this simple dashboard.\n\n### 8.3 UI Design conclusion\n\nOverall, this UI Design prototyping was heavily derived from both prototyping examples in class, as well as prior classes in UI design. This was a great explanation for my user wants checklist: <https://www.atlassian.com/agile/project-management/user-stories>. By focusing on our potential end user, we can best choose features that ensures that all their potential needs are met by our dashboards and applications.\n\n## 9.0 Improvements and Followup\n\nIn my opinion, there might be some followup:\n\n-   Maybe a link to the original data source with credits?\n\n-   Some related research papers so the viewer can understand our inspiration and viewpoint\n\n-   Maybe some other prep material so they can use similar datasets and shp files as us so they can replicate our findings.\n\nThis may be followed up in my team's final product (G1T7).\n",
    "supporting": [
      "takehome3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}